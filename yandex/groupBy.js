/**
 * Необходимо реализовать метод groupBy, расширяющий стандартные методы массивов.
 * Метод должен возвращать сгруппированную версию массива - объект,
 * в котором каждый ключ является результатом выполнения переданной функции fn(arr[i]),
 * а каждое значение - массивом, содержащим все элементы исходного массива с этим ключом
 */

const array1 = [{ id: 1 }, { id: 1 }, { id: 2 }];

const fn = (item) => item.id;

array1.groupBy(fn);

Array.prototype.groupBy = function (fn) {
  // Создаем пустой объект для хранения результата группировки
  const result = {};

  // Проходим по каждому элементу исходного массива
  for (let i = 0; i < this.length; i++) {
    // Вычисляем ключ для текущего элемента с помощью переданной функции fn
    const key = fn(this[i]);

    // Проверяем, существует ли уже такой ключ в объекте результата
    if (result[key]) {
      // Если ключ уже существует, добавляем текущий элемент в существующий массив
      result[key].push(this[i]);
    } else {
      // Если ключа нет, создаем новый массив с текущим элементом
      result[key] = [this[i]];
    }
  }

  // Возвращаем объект с сгруппированными элементами
  return result;
};

// Пример 1
const array2 = [1, 2, 3];
array2.groupBy(String);
